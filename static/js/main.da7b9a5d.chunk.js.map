{"version":3,"sources":["css/theme/source/_variables.module.scss","App.js","reportWebVitals.js","index.js"],"names":["module","exports","merge","defaults","color","styles","textColor","backgroundColor","secondaryColor","borderColor","font","family","size","layout","padding","scale","grid","gridColor","plugins","title","legend","position","App","deck","React","useRef","charts","useState","curFragment","setCurFragment","updateFragment","parseInt","current","getCurrentSlide","getAttribute","animateCurrentChart","setTimeout","Object","keys","forEach","c","curChart","canvas","closest","console","log","reset","update","useEffect","Reveal","initialize","addEventListener","removeEventListener","className","class","ref","el","data","labels","datasets","options","display","text","Array","label","tension","thirdColor","radius","scales","y","max","pointStyle","usePointStyle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da7b9a5d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#4e6c7f\",\"secondaryColor\":\"#dd8357\",\"thirdColor\":\"#dad5cf\",\"fourthColor\":\"#a5b9c4\",\"greenColor\":\"#35939f\",\"textColor\":\"#eee\",\"gridColor\":\"rgba(238,238,238,0.2)\"};","import React from 'react'\n\nimport Reveal from 'reveal.js'\n// import Markdown from 'reveal.js/plugin/markdown/markdown.esm.js';\n\nimport { Bar, Line, defaults } from 'test-react-chartjs-2'\nimport merge from 'lodash.merge'\n\nimport styles from './css/theme/source/_variables.module.scss'\nimport \"../node_modules/reveal.js/dist/reveal.css\"\nimport \"./css/theme/source/pier-dark.scss\"\n\n\nmerge(defaults, {\n  color: styles.textColor,\n  backgroundColor: styles.secondaryColor,\n  borderColor: styles.secondaryColor,\n  font: {\n    family: \"Dindan\",\n    size: 16,\n  },\n  layout: {\n    padding: 40,\n  },\n  scale: {\n    grid: {\n      color: styles.gridColor,\n      borderColor: styles.textColor\n    }\n  },\n  plugins: {\n    title: {\n      font: {\n        size: 20,\n      }\n    },\n    legend: {\n      position: 'bottom',\n    },\n  }\n})\n\nfunction App() {\n\n  const deck = React.useRef(null)\n  const charts = React.useRef({})\n\n  const [curFragment, setCurFragment] = React.useState(0)\n\n  function updateFragment() {\n    setCurFragment(parseInt(deck.current.getCurrentSlide().getAttribute('data-fragment')) + 1)\n  }\n\n  function animateCurrentChart() {\n    setTimeout(() => {\n      updateFragment()\n      Object.keys(charts.current).forEach(c => {\n        const curChart = charts.current[c]\n        if (curChart.canvas.closest('.present')) {\n          console.log(curChart)\n          curChart.reset()\n          curChart.update()\n        }\n      })\n    }, 0)\n  }\n\n  React.useEffect(() => {\n    deck.current = new Reveal({\n      // plugins: [ Markdown ],\n    })\n    deck.current.initialize()\n    deck.current.addEventListener('slidechanged', animateCurrentChart)\n    deck.current.addEventListener('fragmentshown', updateFragment)\n    deck.current.addEventListener('fragmenthidden', updateFragment)\n    return () => {\n      deck.current.removeEventListener('slidechanged', animateCurrentChart)\n      deck.current.removeEventListener('fragmentshown', updateFragment)\n      deck.current.removeEventListener('fragmenthidden', updateFragment)\n    }\n  }, [])\n\n  React.useEffect(() => {\n    console.log(\"Current Fragment\", curFragment)\n  }, [curFragment])\n\n  return (\n      <div className=\"slides\">\n\n        <section>\n          <h2>\n            โครงสร้างเศรษฐกิจสังคมไทย<br />\n\t\t\t\t\t\t<span className=\"orange\">ความเปราะบางท่ามกลางความเปลี่ยนแปลง</span>\n          </h2>\n        </section>\n\n        <section>\n\t\t\t\t\t<div class=\"title\">\n\t\t\t\t\t\tแต่ประเด็นทางเศรษฐกิจ<br />\n\t\t\t\t\t\tไม่ได้เป็นความเปราะบางเพียงอย่างเดียว<br />\n\t\t\t\t\t\t<span class=\"orange\">ต้องพิจารณาประเด็นทางสังคมควบคู่ไปด้วย</span>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n        \n        <section>\n          <h2>สังคมไทยมีความเชื่อใจต่อกันลดลงอย่างต่อเนื่อง…</h2>\n          <Bar\n            ref={el => charts.current['trust'] = el}\n            data={{\n              labels: [\"2007\", \"2013\", \"2018\"],\n              datasets: [\n                {\n                  data: [41, 32, 29],\n                  backgroundColor: styles.secondaryColor,\n                }\n              ]\n            }}\n            options={{\n              plugins: {\n                title: {\n                  display: true,\n                  text: \"คะแนนความเชื่อใจจาก World Values Survey\",\n                },\n                legend: {\n                  display: false,\n                }\n              }\n            }}\n          />\n        </section>\n\n        <section>\n          <h2>…ขณะที่มีกลุ่มความคิดทางการเมือง<br />ไปทางซ้ายมากขึ้น</h2>\n          <Line\n            ref={el => charts.current['political_shift'] = el}\n            data={{\n              labels: [...Array(10).keys()],\n              datasets: [\n                {\n                  data: [0.02, 0.02, 0.015, 0.04, 0.25, 0.2, 0.24, 0.16, 0.03, 0.03],\n                  label: \"2008\",\n                  tension: 0.4,\n                },\n                {\n                  data: [[0.02, 0.02, 0.015, 0.04, 0.25, 0.2, 0.24, 0.16, 0.03, 0.03], [0.02, 0.018, 0.021, 0.06, 0.36, 0.2, 0.115, 0.11, 0.03, 0.05]][curFragment],\n                  label: \"2018\",\n                  tension: 0.4,\n                  borderColor: styles.thirdColor,\n                },\n              ]\n            }}\n            options={{\n              radius: 0,\n              scales: {\n                y: {\n                  max: 0.4\n                }\n              },\n              plugins: {\n                legend: {\n                  labels: {\n                    pointStyle: 'line',\n                    usePointStyle: true,\n                  }\n                }\n              }\n            }}\n          />\n          <div class=\"fragment\" />\n        </section>\n\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}